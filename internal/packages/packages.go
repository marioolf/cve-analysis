package packages

import (
	"fmt"
	"os/exec"
	"strings"

	"FastCVE/internal/database"
)

type Package struct {
	Name    string
	Version string
}

func GetInstalledPackages() ([]Package, error) {
	cmd := exec.Command("dpkg", "-l")
	output, err := cmd.Output()
	if err != nil {
		return nil, err
	}

	lines := strings.Split(string(output), "\n")
	var packages []Package
	for _, line := range lines {
		fields := strings.Fields(line)
		if len(fields) > 2 && fields[0] == "ii" {
			packages = append(packages, Package{Name: fields[1], Version: fields[2]})
		}
	}
	return packages, nil
}

func ComparePackagesWithDatabase(packageList []string) error {
	packagesInDB, err := database.RetrievePackagesFromDB()
	if err != nil {
		return err
	}

	for _, pkg := range packagesInDB {
		lowerPkgName := strings.ToLower(pkg.Name)
		for _, entry := range packageList {
			if strings.Contains(strings.ToLower(entry), lowerPkgName) {
				fmt.Printf("Paquete %s tiene una vulnerabilidad asociada: %s\n", pkg.Name, entry)
			}
		}
	}

	return nil
}

func ClearDatabase() error {
	return database.ClearDatabase()
}
